# Copyright 2013 The Flutter Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//impeller/tools/impeller.gni")

impeller_component("skia_conversions") {
  sources = [
    "skia_conversions.cc",
    "skia_conversions.h",
  ]

  public_deps = [
    "../core",
    "../geometry",
    "//display_list",
    "//fml",
    "//skia",
    "//skia/modules/skparagraph",
  ]
}

impeller_component("display_list") {
  sources = [
    "dl_dispatcher.cc",
    "dl_dispatcher.h",
    "dl_image_impeller.cc",
    "dl_image_impeller.h",
    "dl_vertices_geometry.cc",
    "dl_vertices_geometry.h",
    "nine_patch_converter.cc",
    "nine_patch_converter.h",
  ]

  public_deps = [
    ":skia_conversions",
    "../aiks",
    "//display_list",
    "//fml",
    "//impeller/typographer/backends/skia:typographer_skia_backend",
    "//skia",
  ]

  if (!defined(defines)) {
    defines = []
  }
  if (impeller_enable_3d) {
    defines += [ "IMPELLER_ENABLE_3D" ]
  }
}

template("display_list_unittests_component") {
  target_name = invoker.target_name
  predefined_sources = [
    "aiks_dl_atlas_unittests.cc",
    "aiks_dl_basic_unittests.cc",
    "aiks_dl_clip_unittests.cc",
    "aiks_dl_gradient_unittests.cc",
    "aiks_dl_opacity_unittests.cc",
    "aiks_dl_path_unittests.cc",
    "aiks_dl_runtime_effect_unittests.cc",
    "aiks_dl_unittests.cc",
    "aiks_dl_vertices_unittests.cc",
    "dl_golden_blur_unittests.cc",
    "dl_golden_unittests.cc",
    "dl_playground.cc",
    "dl_playground.h",
    "dl_unittests.cc",
  ]
  additional_sources = []
  if (defined(invoker.sources)) {
    additional_sources = invoker.sources
  }
  impeller_component(target_name) {
    testonly = true
    if (defined(invoker.defines)) {
      defines = invoker.defines
    } else {
      defines = []
    }
    defines += [ "_USE_MATH_DEFINES" ]
    if (impeller_enable_3d) {
      defines += [ "IMPELLER_ENABLE_3D" ]
    }

    sources = predefined_sources + additional_sources
    if (defined(invoker.deps)) {
      deps = invoker.deps
    } else {
      deps = []
    }
    deps += [
      ":display_list",
      "../playground:playground_test",
      "//impeller/golden_tests:screenshot",
      "//impeller/scene",
      "//impeller/typographer/backends/stb:typographer_stb_backend",
      "//third_party/txt",
    ]
    if (defined(invoker.public_configs)) {
      public_configs = invoker.public_configs
    }
  }
}

display_list_unittests_component("display_list_unittests") {
  deps = [ "//impeller/aiks:aiks_unittests" ]
}

display_list_unittests_component("display_list_unittests_golden") {
  deps = [ "//impeller/aiks:aiks_unittests_golden" ]
  defines = [
    "IMPELLER_GOLDEN_TESTS",
    "IMPELLER_ENABLE_VALIDATION=1",
  ]
}

impeller_component("skia_conversions_unittests") {
  testonly = true

  sources = [ "skia_conversions_unittests.cc" ]

  deps = [
    ":skia_conversions",
    "//testing:testing_lib",
  ]
}
