# Copyright 2013 The Flutter Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//impeller/tools/impeller.gni")
import("//testing/testing.gni")

if (enable_unittests) {
  group("shaders") {
    testonly = true
    deps = [
      ":fixtures",
      "//lib/ui/fixtures/shaders/general_shaders",
      "//lib/ui/fixtures/shaders/supported_glsl_op_shaders",
      "//lib/ui/fixtures/shaders/supported_op_shaders",
    ]
  }

  impellerc("ink_sparkle") {
    shaders = [ "//impeller/fixtures/ink_sparkle.frag" ]
    shader_target_flags = [ "--sksl" ]
    intermediates_subdir = "iplr"
    sl_file_extension = "iplr"
    iplr = true
  }

  impellerc("ink_sparkle_web") {
    shaders = [ "//impeller/fixtures/ink_sparkle.frag" ]
    shader_target_flags = [ "--sksl" ]
    intermediates_subdir = "iplr-json"
    sl_file_extension = "iplr"
    iplr = true
    json = true
  }

  impellerc("sampler_order_fixture") {
    shaders = [
      "//impeller/fixtures/ordering/shader_with_samplers.frag",
      "//third_party/test_shaders/selman/glow_shader.frag",
    ]
    shader_target_flags = [
      "--runtime-stage-metal",
      "--runtime-stage-gles",
      "--runtime-stage-vulkan",
    ]
    intermediates_subdir = "iplr-remap"
    sl_file_extension = "iplr"
    iplr = true
  }

  test_fixtures("fixtures") {
    deps = [
      ":ink_sparkle",
      ":ink_sparkle_web",
      ":sampler_order_fixture",
    ]
    fixtures = get_target_outputs(":ink_sparkle")
    dest = "$root_gen_dir/flutter/lib/ui"
  }
}
